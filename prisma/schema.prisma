// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model Imovel {
    id        String   @id @default(cuid()) 
    listingId BigInt
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
    
    titulo      String @db.Text
    descricao   String @db.VarChar(2000)
    cep         String? @db.VarChar(25)

    precoVenda            Decimal?
    precoLocacao          Decimal?
    precoDescontoVenda    Decimal?
    precoDescontoLocacao  Decimal?

    isVenda               Boolean
    isLocacao             Boolean

    isAtivo               Boolean
    isPro                 Boolean
    isUltra               Boolean
    @@index([isAtivo])

    tipo                  String?
    numero                String @db.VarChar(25)
    rua                   String @db.VarChar(255)
    bairro                String @db.VarChar(255)
    cidade                String @db.VarChar(255)
    estado                String @db.VarChar(255)

    empresaId             String @db.VarChar(255)
    empresa               Empresa @relation(fields: [empresaId], references: [id])
    @@index([empresaId])

    areaTotal             Decimal?
    banheiros             Int?
    quartos               Int?
    suites                Int?
    vagas                 Int?

    latitude              Decimal?
    longitude             Decimal?


    categorias CaracteristicasImoveis[]
    fotos FotoImovel[]
}

model Caracteristica {
    id       String   @id @default(cuid())
    nome     String   @db.VarChar(255)
    imoveis CaracteristicasImoveis[]
}

// https://www.prisma.io/docs/concepts/components/prisma-schema/relations/many-to-many-relations
model CaracteristicasImoveis {
    imovel              Imovel @relation(fields: [imovelId], references: [id])
    imovelId            String  @db.VarChar(255)
    caracteristica      Caracteristica @relation(fields: [caracteristicaId], references: [id])
    caracteristicaId    String  @db.VarChar(255)

    @@index([imovelId])
    @@index([caracteristicaId])
    @@id([imovelId, caracteristicaId])
}

model FotoImovel {
    id String @id @default(cuid())
    createdAt   DateTime @default(now())
    
    imovelId    String  @db.VarChar(255)
    imovel      Imovel @relation(fields: [imovelId], references: [id])
    @@index([imovelId])
    caption     String  
    url         String  @db.VarChar(800)
    thumbnail   String  @db.VarChar(800)
    isPrincipal Boolean
    isAtivo     Boolean
}

model Empresa {
  id       String   @id @default(cuid())
  foto     String   @db.VarChar(255)
  nome     String   @db.VarChar(255)
  email    String   @db.VarChar(255)
  telefone String   @db.VarChar(255)

  imoveis Imovel[]
}

model User {
    id        String   @id @default(cuid())
    email     String   @unique
    name      String
    telefone  String
}